{"version":3,"file":"abstracted-client.umd.js","sources":["esnext/EventManager.js","esnext/db.js"],"sourcesContent":["import * as EventEmitter from \"events\";\nexport class EventManager extends EventEmitter {\n    connection(state) {\n        this.emit(\"connection\", state);\n    }\n}\n","// tslint:disable:whitespace\nimport { RealTimeDB, _getFirebaseType } from \"abstracted-firebase\";\nimport { EventManager } from \"./EventManager\";\nexport var FirebaseBoolean;\n(function (FirebaseBoolean) {\n    FirebaseBoolean[FirebaseBoolean[\"true\"] = 1] = \"true\";\n    FirebaseBoolean[FirebaseBoolean[\"false\"] = 0] = \"false\";\n})(FirebaseBoolean || (FirebaseBoolean = {}));\nexport class DB extends RealTimeDB {\n    constructor(config) {\n        super();\n        this._eventManager = new EventManager();\n        config = Object.assign({\n            name: \"[DEFAULT]\"\n        }, config);\n        this.initialize(config);\n    }\n    get auth() {\n        return _getFirebaseType(this, \"auth\");\n    }\n    get database() {\n        return _getFirebaseType(this, \"database\");\n    }\n    get firestore() {\n        return _getFirebaseType(this, \"firestore\");\n    }\n    get messaging() {\n        return _getFirebaseType(this, \"messaging\");\n    }\n    get functions() {\n        return _getFirebaseType(this, \"functions\");\n    }\n    get storage() {\n        return _getFirebaseType(this, \"storage\");\n    }\n    monitorConnection(snap) {\n        this._isConnected = snap.val();\n        // cycle through temporary clients\n        this._waitingForConnection.forEach(cb => cb());\n        this._waitingForConnection = [];\n        // call active listeners\n        if (this.isConnected) {\n            this._onConnected.forEach(listener => listener.cb(this));\n        }\n        else {\n            this._onDisconnected.forEach(listener => listener.cb(this));\n        }\n    }\n    /**\n     * connect\n     *\n     * Asynchronously loads the firebase/app library and then\n     * initializes a connection to the database.\n     */\n    async connectToFirebase(config) {\n        if (!this.isConnected) {\n            if (process.env[\"FIREBASE_CONFIG\"]) {\n                config = Object.assign({}, config, JSON.parse(process.env[\"FIREBASE_CONFIG\"]));\n            }\n            if (!config.apiKey || !config.authDomain || !config.databaseURL) {\n                throw new Error(\"Trying to connect without appropriate firebase configuration!\");\n            }\n            const { name } = config;\n            // tslint:disable-next-line:no-submodule-imports\n            const firebase = await import(\"firebase/app\");\n            try {\n                const runningApps = new Set(firebase.apps.map(i => i.name));\n                this.app = runningApps.has(name)\n                    ? firebase.app()\n                    : (this.app = firebase.initializeApp(config, name));\n                this.enableDatabaseLogging = firebase.database.enableLogging.bind(firebase.database);\n            }\n            catch (e) {\n                if (e.message && e.message.indexOf(\"app/duplicate-app\") !== -1) {\n                    console.log(JSON.stringify(e));\n                    console.log(`The \"${name}\" app already exists; will proceed.`);\n                    this._isConnected = true;\n                }\n                else {\n                    throw e;\n                }\n            }\n            this._database = this.app.database();\n            this._eventManager.connection(true);\n        }\n        // TODO: relook at debugging func\n        if (config.debugging) {\n            this.enableDatabaseLogging(typeof config.debugging === \"function\"\n                ? (message) => config.debugging(message)\n                : (message) => console.log(\"[FIREBASE]\", message));\n        }\n    }\n    listenForConnectionStatus() {\n        this._database.ref(\".info/connected\").on(\"value\", this.monitorConnection.bind(this));\n    }\n}\n"],"names":["FirebaseBoolean","RealTimeDB","_getFirebaseType"],"mappings":"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"}